## USER INPUTS
$SourceDBPasswordBank = "<DatabaseInstanceName>"
$ClientID = <ClientID>
## END USER INPUTS

# Define initial queries to store the template DB's database names and password banks then run queries to store results of initial queries
$SQLCMD_SelectDBNameByClientID ="select DatabaseInstanceName from VenioPCD.dbo.tbl_pj_ProjectSetup where ClientID = $ClientID"
$SQLCMD_SelectPasswordBankTemplate = "SELECT Password from $SourceDBPasswordBank.dbo.tbl_ex_passwordbank"
$DBNames = Invoke-Sqlcmd -ServerInstance INVUS-SQL-VE01\VENINST01 -Query $SQLCMD_SelectDBNameByClientID
$HashedPasswords = Invoke-Sqlcmd -ServerInstance INV-SQL06\INVINST06 -Query $SQLCMD_SelectPasswordBankTemplate

# Run for each database found
foreach ($Database in $DBNames.DatabaseInstanceName){

# Counter var
$X=1

# Create new Sql command for each database to query the newest PasswordBankID and store results
$SQLCMD_SelectPasswordBankID = "SELECT TOP 1 PasswordBankID from $Database.dbo.tbl_ex_passwordbank ORDER BY PasswordBankID DESC"
$PasswordBankID = Invoke-Sqlcmd -ServerInstance INV-SQL06\INVINST06 -Query $SQLCMD_SelectPasswordBankID

# Create new Sql command for each database to query the existing passwords and store results
$SQLCMD_SelectPasswordBank = "SELECT Password from $Database.dbo.tbl_ex_passwordbank"
$ExistingPasswords = Invoke-Sqlcmd -ServerInstance INV-SQL06\INVINST06 -Query $SQLCMD_SelectPasswordBank

# Compare the template database passwords with current database passwords and store the missing passwords
$MissingPasswords = Compare-Object -ReferenceObject ($ExistingPasswords) -DifferenceObject ($HashedPasswords) -Property Password | Where-Object{$_.sideIndicator -eq "<="}

# Output the database name of the database being added to
$Database

# For each missing password, generate a new insert query
foreach ($NewPass in $MissingPasswords.Password){
    $NewPass
    $NewPasswordBankID = $PasswordBankID.PasswordBankID + $X++
    $SQLCMD_INSERT_New_passwords= @"
SET IDENTITY_INSERT $Database.dbo.tbl_ex_passwordbank ON
INSERT into $Database.dbo.tbl_ex_passwordbank 
(PasswordBankId, Password)
Values ($NewPasswordBankID, '$NewPass')
SET IDENTITY_INSERT $Database.dbo.tbl_ex_passwordbank OFF
"@

# Run the new insert query
Invoke-Sqlcmd -ServerInstance INV-SQL06\INVINST06 -Query $SQLCMD_INSERT_New_passwords

} # End foreach missing password
} # End foreach database
